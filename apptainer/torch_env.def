Bootstrap: docker
From: nvidia/cuda:12.8.1-cudnn-runtime-ubuntu24.04

%environment
    # Imposta Python e UTF-8
    export LC_ALL=C.UTF-8
    export LANG=C.UTF-8
    export PYTHONIOENCODING=utf-8
    export PATH=/opt/venv/bin:/usr/local/bin:$PATH
    export VIRTUAL_ENV=/opt/venv

%post
    # Imposta locale per apt
    export DEBIAN_FRONTEND=noninteractive
    ln -fs /usr/share/zoneinfo/Europe/Rome /etc/localtime

    # Aggiorna pacchetti di sistema e installa dipendenze essenziali
    apt-get update && apt-get install -y \
        python3 \
        python3-pip \
        python3-dev \
        python3-venv \
        git \
        wget \
        curl \
        build-essential \
        libjpeg-dev \
        libpng-dev \
        && apt-get clean \
        && rm -rf /var/lib/apt/lists/*

    # Link python -> python3
    ln -s /usr/bin/python3 /usr/bin/python

    # Crea virtual environment
    python3 -m venv /opt/venv

    # Attiva il virtual environment e aggiorna pip
    /opt/venv/bin/pip install --upgrade pip setuptools wheel packaging

    # Installa PyTorch + CUDA (versione cu121)
    /opt/venv/bin/pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

    # Installa clip
    /opt/venv/bin/pip install git+https://github.com/openai/CLIP.git

    # Installa altre dipendenze
    /opt/venv/bin/pip install einops numpy open-clip-torch pillow scipy timm tokenizers wandb torchdata torchmetrics huggingface-hub tqdm transformers urllib3 xformers streamlit-keyup lpips clean-fid peft dominate diffusers gradio vision_aided_loss opencv-python-headless

%runscript
    # Comando di default: python del virtual environment
    exec /opt/venv/bin/python "$@"

%apprun exec
    # Per eseguire comandi shell con l'environment attivato
    exec "$@"

%labels
    Author Matteo Caligiuri
    Version v1.0
    Description PyTorch + CUDA environment for GPU-based deep learning

%help
    Questa immagine contiene:
    - Python 3.12 (default Ubuntu 24.04) in virtual environment
    - PyTorch con supporto CUDA 12.8
    - Dipendenze base per DL/ML (numpy, opencv, etc.)
    - Virtual environment attivato automaticamente

    Utilizzo:
    - apptainer run --nv torch-cuda.sif script.py    # Esegue python
    - apptainer run --nv --app exec torch-cuda.sif bash  # Shell con venv attivo
    - apptainer exec --nv torch-cuda.sif /opt/venv/bin/pip list  # Comandi diretti
